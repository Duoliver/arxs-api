// <auto-generated />
using System;
using ArxsAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ArxsAPI.Migrations
{
    [DbContext(typeof(ArxsDbContext))]
    [Migration("20240624175554_TrophyNameUnique")]
    partial class TrophyNameUnique
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "race_type", new[] { "main_race", "sub_pre_qualify", "pre_qualify", "qualify_one", "qualify_two", "bottom_four" });
            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "round_race_driver_status", new[] { "undefined", "disqualified", "classified", "winner", "retired", "classified_retired" });
            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "trophy_round_driver_status", new[] { "undefined", "disqualified", "classified", "winner", "did_not_qualify" });
            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "trophy_type", new[] { "teams", "drivers" });
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ArxsAPI.Models.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ManufacturerId")
                        .HasColumnType("integer")
                        .HasColumnName("manufacturer_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int>("Year")
                        .HasColumnType("integer")
                        .HasColumnName("year");

                    b.HasKey("Id");

                    b.HasIndex("ManufacturerId");

                    b.ToTable("car", (string)null);
                });

            modelBuilder.Entity("ArxsAPI.Models.Championship", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Alias")
                        .HasColumnType("text")
                        .HasColumnName("alias");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int?>("PredecessorId")
                        .HasColumnType("integer")
                        .HasColumnName("predecessor_id");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("PredecessorId")
                        .IsUnique();

                    b.ToTable("championship", (string)null);
                });

            modelBuilder.Entity("ArxsAPI.Models.ChampionshipSeason", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ChampionshipId")
                        .HasColumnType("integer")
                        .HasColumnName("championship_id");

                    b.Property<int>("SeasonId")
                        .HasColumnType("integer")
                        .HasColumnName("season_id");

                    b.HasKey("Id");

                    b.HasIndex("ChampionshipId");

                    b.HasIndex("SeasonId");

                    b.ToTable("championship_season", (string)null);
                });

            modelBuilder.Entity("ArxsAPI.Models.ChampionshipSeasonRound", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ChampionshipSeasonId")
                        .HasColumnType("integer")
                        .HasColumnName("championship_season_id");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int>("TrackConfigurationId")
                        .HasColumnType("integer")
                        .HasColumnName("track_configuration_id");

                    b.HasKey("Id");

                    b.HasIndex("ChampionshipSeasonId");

                    b.HasIndex("TrackConfigurationId");

                    b.ToTable("championship_season_round", (string)null);
                });

            modelBuilder.Entity("ArxsAPI.Models.ChampionshipSeasonRoundRace", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("LapCount")
                        .HasColumnType("integer")
                        .HasColumnName("lap_count");

                    b.Property<int>("Order")
                        .HasColumnType("integer")
                        .HasColumnName("order");

                    b.Property<int>("RoundId")
                        .HasColumnType("integer")
                        .HasColumnName("round_id");

                    b.Property<int>("Type")
                        .HasColumnType("integer")
                        .HasColumnName("type");

                    b.HasKey("Id");

                    b.HasIndex("RoundId");

                    b.ToTable("championship_season_round_race", (string)null);
                });

            modelBuilder.Entity("ArxsAPI.Models.ChampionshipSeasonTrophy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ChampionshipSeasonId")
                        .HasColumnType("integer")
                        .HasColumnName("championship_season_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int>("ScoreSystemId")
                        .HasColumnType("integer")
                        .HasColumnName("score_system_id");

                    b.Property<int>("TrophyId")
                        .HasColumnType("integer")
                        .HasColumnName("trophy_id");

                    b.HasKey("Id");

                    b.HasIndex("ChampionshipSeasonId");

                    b.HasIndex("ScoreSystemId");

                    b.HasIndex("TrophyId");

                    b.ToTable("championship_season_trophy", (string)null);
                });

            modelBuilder.Entity("ArxsAPI.Models.ChampionshipSeasonTrophyRound", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Order")
                        .HasColumnType("integer")
                        .HasColumnName("order");

                    b.Property<int>("RoundId")
                        .HasColumnType("integer")
                        .HasColumnName("round_id");

                    b.Property<int>("TrophyId")
                        .HasColumnType("integer")
                        .HasColumnName("trophy_id");

                    b.HasKey("Id");

                    b.HasIndex("RoundId");

                    b.HasIndex("TrophyId");

                    b.ToTable("championship_season_trophy_round", (string)null);
                });

            modelBuilder.Entity("ArxsAPI.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Adjective")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("adjective");

                    b.Property<string>("Iso3")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)")
                        .HasColumnName("iso_3");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.HasIndex("Iso3")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("country", (string)null);
                });

            modelBuilder.Entity("ArxsAPI.Models.Driver", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CityOfOrigin")
                        .HasColumnType("text")
                        .HasColumnName("city_of_origin");

                    b.Property<int>("CountryOfOriginId")
                        .HasColumnType("integer")
                        .HasColumnName("country_of_origin_id");

                    b.Property<DateOnly?>("DateOfBirth")
                        .HasColumnType("date")
                        .HasColumnName("date_of_birth");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int>("NationalityId")
                        .HasColumnType("integer")
                        .HasColumnName("nationality_id");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("surname");

                    b.HasKey("Id");

                    b.HasIndex("CountryOfOriginId");

                    b.HasIndex("NationalityId");

                    b.ToTable("driver", (string)null);
                });

            modelBuilder.Entity("ArxsAPI.Models.Manufacturer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CountryId")
                        .HasColumnType("integer")
                        .HasColumnName("country_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("manufacturer", (string)null);
                });

            modelBuilder.Entity("ArxsAPI.Models.Score", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("PointsAmount")
                        .HasColumnType("integer")
                        .HasColumnName("points_amount");

                    b.Property<int>("Position")
                        .HasColumnType("integer")
                        .HasColumnName("position");

                    b.Property<int?>("ScoreSystemId")
                        .HasColumnType("integer")
                        .HasColumnName("score_system_id");

                    b.HasKey("Id");

                    b.HasIndex("ScoreSystemId");

                    b.ToTable("score", (string)null);
                });

            modelBuilder.Entity("ArxsAPI.Models.ScoreSystem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Alias")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("alias");

                    b.HasKey("Id");

                    b.HasIndex("Alias")
                        .IsUnique();

                    b.ToTable("score_system", (string)null);
                });

            modelBuilder.Entity("ArxsAPI.Models.Season", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int>("Year")
                        .HasColumnType("integer")
                        .HasColumnName("year");

                    b.HasKey("Id");

                    b.ToTable("season", (string)null);
                });

            modelBuilder.Entity("ArxsAPI.Models.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CountryId")
                        .HasColumnType("integer")
                        .HasColumnName("country_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int?>("PreviousTeamId")
                        .HasColumnType("integer")
                        .HasColumnName("previous_team_id");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("PreviousTeamId")
                        .IsUnique();

                    b.ToTable("team", (string)null);
                });

            modelBuilder.Entity("ArxsAPI.Models.TeamCar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CarModelId")
                        .HasColumnType("integer")
                        .HasColumnName("car_model_id");

                    b.Property<string>("Suffix")
                        .HasColumnType("text")
                        .HasColumnName("suffix");

                    b.Property<int>("TeamId")
                        .HasColumnType("integer")
                        .HasColumnName("team_id");

                    b.Property<int?>("Year")
                        .HasColumnType("integer")
                        .HasColumnName("year");

                    b.HasKey("Id");

                    b.HasIndex("CarModelId");

                    b.HasIndex("TeamId");

                    b.ToTable("team_car", (string)null);
                });

            modelBuilder.Entity("ArxsAPI.Models.TeamChampionshipSeason", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ChampionshipSeasonId")
                        .HasColumnType("integer")
                        .HasColumnName("championship_season_id");

                    b.Property<string>("Colour")
                        .HasColumnType("text")
                        .HasColumnName("colour");

                    b.Property<int?>("CountryId")
                        .HasColumnType("integer")
                        .HasColumnName("country_id");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int>("TeamId")
                        .HasColumnType("integer")
                        .HasColumnName("team_id");

                    b.HasKey("Id");

                    b.HasIndex("ChampionshipSeasonId");

                    b.HasIndex("CountryId");

                    b.HasIndex("TeamId");

                    b.ToTable("team_championship_season", (string)null);
                });

            modelBuilder.Entity("ArxsAPI.Models.TeamChampionshipSeasonDriver", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CountryId")
                        .HasColumnType("integer")
                        .HasColumnName("country_id");

                    b.Property<int>("DriverId")
                        .HasColumnType("integer")
                        .HasColumnName("driver_id");

                    b.Property<int>("EntryId")
                        .HasColumnType("integer")
                        .HasColumnName("entry_id");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("DriverId");

                    b.HasIndex("EntryId");

                    b.ToTable("team_championship_season_driver", (string)null);
                });

            modelBuilder.Entity("ArxsAPI.Models.TeamChampionshipSeasonDriverCar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("DriverEntryId")
                        .HasColumnType("integer")
                        .HasColumnName("driver_entry_id");

                    b.Property<int>("TeamCarId")
                        .HasColumnType("integer")
                        .HasColumnName("team_car_id");

                    b.HasKey("Id");

                    b.HasIndex("DriverEntryId")
                        .IsUnique();

                    b.HasIndex("TeamCarId");

                    b.ToTable("team_championship_season_driver_car", (string)null);
                });

            modelBuilder.Entity("ArxsAPI.Models.TeamChampionshipSeasonDriverRoundRace", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("DriverEntryId")
                        .HasColumnType("integer")
                        .HasColumnName("driver_entry_id");

                    b.Property<int>("Position")
                        .HasColumnType("integer")
                        .HasColumnName("position");

                    b.Property<int>("RoundRaceId")
                        .HasColumnType("integer")
                        .HasColumnName("round_race_id");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.HasIndex("DriverEntryId");

                    b.HasIndex("RoundRaceId");

                    b.ToTable("team_championship_season_driver_round_race", (string)null);
                });

            modelBuilder.Entity("ArxsAPI.Models.TeamChampionshipSeasonDriverTrophyRound", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("DriverEntryId")
                        .HasColumnType("integer")
                        .HasColumnName("driver_entry_id");

                    b.Property<int>("Position")
                        .HasColumnType("integer")
                        .HasColumnName("position");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.Property<int>("TrophyRoundId")
                        .HasColumnType("integer")
                        .HasColumnName("trophy_round_id");

                    b.HasKey("Id");

                    b.HasIndex("TrophyRoundId");

                    b.ToTable("team_championship_season_driver_trophy_round", (string)null);
                });

            modelBuilder.Entity("ArxsAPI.Models.TeamChampionshipSeasonTrophy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("EntryId")
                        .HasColumnType("integer")
                        .HasColumnName("entry_id");

                    b.Property<int>("TrophyId")
                        .HasColumnType("integer")
                        .HasColumnName("trophy_id");

                    b.HasKey("Id");

                    b.HasIndex("EntryId");

                    b.HasIndex("TrophyId");

                    b.ToTable("team_championship_season_trophy", (string)null);
                });

            modelBuilder.Entity("ArxsAPI.Models.Track", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .HasColumnType("text")
                        .HasColumnName("city");

                    b.Property<int>("CountryId")
                        .HasColumnType("integer")
                        .HasColumnName("country_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("track", (string)null);
                });

            modelBuilder.Entity("ArxsAPI.Models.TrackConfiguration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int>("TrackId")
                        .HasColumnType("integer")
                        .HasColumnName("track_id");

                    b.Property<int>("Year")
                        .HasColumnType("integer")
                        .HasColumnName("year");

                    b.HasKey("Id");

                    b.HasIndex("TrackId");

                    b.ToTable("track_configuration", (string)null);
                });

            modelBuilder.Entity("ArxsAPI.Models.Trophy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int>("Type")
                        .HasColumnType("integer")
                        .HasColumnName("type");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("trophy", (string)null);
                });

            modelBuilder.Entity("ArxsAPI.Models.Car", b =>
                {
                    b.HasOne("ArxsAPI.Models.Manufacturer", "Manufacturer")
                        .WithMany("Cars")
                        .HasForeignKey("ManufacturerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Manufacturer");
                });

            modelBuilder.Entity("ArxsAPI.Models.Championship", b =>
                {
                    b.HasOne("ArxsAPI.Models.Championship", "Predecessor")
                        .WithOne("Successor")
                        .HasForeignKey("ArxsAPI.Models.Championship", "PredecessorId");

                    b.Navigation("Predecessor");
                });

            modelBuilder.Entity("ArxsAPI.Models.ChampionshipSeason", b =>
                {
                    b.HasOne("ArxsAPI.Models.Championship", "Championship")
                        .WithMany("ChampionshipSeasons")
                        .HasForeignKey("ChampionshipId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ArxsAPI.Models.Season", "Season")
                        .WithMany("ChampionshipSeasons")
                        .HasForeignKey("SeasonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Championship");

                    b.Navigation("Season");
                });

            modelBuilder.Entity("ArxsAPI.Models.ChampionshipSeasonRound", b =>
                {
                    b.HasOne("ArxsAPI.Models.ChampionshipSeason", "ChampionshipSeason")
                        .WithMany("Rounds")
                        .HasForeignKey("ChampionshipSeasonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ArxsAPI.Models.TrackConfiguration", "TrackConfiguration")
                        .WithMany("Rounds")
                        .HasForeignKey("TrackConfigurationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChampionshipSeason");

                    b.Navigation("TrackConfiguration");
                });

            modelBuilder.Entity("ArxsAPI.Models.ChampionshipSeasonRoundRace", b =>
                {
                    b.HasOne("ArxsAPI.Models.ChampionshipSeasonRound", "Round")
                        .WithMany("RoundRaces")
                        .HasForeignKey("RoundId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Round");
                });

            modelBuilder.Entity("ArxsAPI.Models.ChampionshipSeasonTrophy", b =>
                {
                    b.HasOne("ArxsAPI.Models.ChampionshipSeason", "ChampionshipSeason")
                        .WithMany("Trophies")
                        .HasForeignKey("ChampionshipSeasonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ArxsAPI.Models.ScoreSystem", "ScoreSystem")
                        .WithMany("Trophies")
                        .HasForeignKey("ScoreSystemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ArxsAPI.Models.Trophy", "Trophy")
                        .WithMany("ChampionshipSeasonTrophies")
                        .HasForeignKey("TrophyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChampionshipSeason");

                    b.Navigation("ScoreSystem");

                    b.Navigation("Trophy");
                });

            modelBuilder.Entity("ArxsAPI.Models.ChampionshipSeasonTrophyRound", b =>
                {
                    b.HasOne("ArxsAPI.Models.ChampionshipSeasonRound", "Round")
                        .WithMany("RoundTrophies")
                        .HasForeignKey("RoundId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ArxsAPI.Models.ChampionshipSeasonTrophy", "Trophy")
                        .WithMany("TrophyRounds")
                        .HasForeignKey("TrophyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Round");

                    b.Navigation("Trophy");
                });

            modelBuilder.Entity("ArxsAPI.Models.Driver", b =>
                {
                    b.HasOne("ArxsAPI.Models.Country", "CountryOfOrigin")
                        .WithMany("NativeDrivers")
                        .HasForeignKey("CountryOfOriginId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ArxsAPI.Models.Country", "Nationality")
                        .WithMany("NationalDrivers")
                        .HasForeignKey("NationalityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CountryOfOrigin");

                    b.Navigation("Nationality");
                });

            modelBuilder.Entity("ArxsAPI.Models.Manufacturer", b =>
                {
                    b.HasOne("ArxsAPI.Models.Country", "Country")
                        .WithMany("Manufacturers")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("ArxsAPI.Models.Score", b =>
                {
                    b.HasOne("ArxsAPI.Models.ScoreSystem", "ScoreSystem")
                        .WithMany("Scores")
                        .HasForeignKey("ScoreSystemId");

                    b.Navigation("ScoreSystem");
                });

            modelBuilder.Entity("ArxsAPI.Models.Team", b =>
                {
                    b.HasOne("ArxsAPI.Models.Country", "Country")
                        .WithMany("Teams")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ArxsAPI.Models.Team", "PreviousTeam")
                        .WithOne("NextTeam")
                        .HasForeignKey("ArxsAPI.Models.Team", "PreviousTeamId");

                    b.Navigation("Country");

                    b.Navigation("PreviousTeam");
                });

            modelBuilder.Entity("ArxsAPI.Models.TeamCar", b =>
                {
                    b.HasOne("ArxsAPI.Models.Car", "CarModel")
                        .WithMany("TeamCars")
                        .HasForeignKey("CarModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ArxsAPI.Models.Team", "Team")
                        .WithMany("Cars")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CarModel");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("ArxsAPI.Models.TeamChampionshipSeason", b =>
                {
                    b.HasOne("ArxsAPI.Models.ChampionshipSeason", "ChampionshipSeason")
                        .WithMany("Entries")
                        .HasForeignKey("ChampionshipSeasonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ArxsAPI.Models.Country", "Country")
                        .WithMany("Entries")
                        .HasForeignKey("CountryId");

                    b.HasOne("ArxsAPI.Models.Team", "Team")
                        .WithMany("Entries")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChampionshipSeason");

                    b.Navigation("Country");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("ArxsAPI.Models.TeamChampionshipSeasonDriver", b =>
                {
                    b.HasOne("ArxsAPI.Models.Country", "Country")
                        .WithMany("DriverEntries")
                        .HasForeignKey("CountryId");

                    b.HasOne("ArxsAPI.Models.Driver", "Driver")
                        .WithMany("TeamsEntries")
                        .HasForeignKey("DriverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ArxsAPI.Models.TeamChampionshipSeason", "Entry")
                        .WithMany("DriversEntries")
                        .HasForeignKey("EntryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");

                    b.Navigation("Driver");

                    b.Navigation("Entry");
                });

            modelBuilder.Entity("ArxsAPI.Models.TeamChampionshipSeasonDriverCar", b =>
                {
                    b.HasOne("ArxsAPI.Models.TeamChampionshipSeasonDriver", "DriverEntry")
                        .WithOne("EntryCar")
                        .HasForeignKey("ArxsAPI.Models.TeamChampionshipSeasonDriverCar", "DriverEntryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ArxsAPI.Models.TeamCar", "TeamCar")
                        .WithMany("DriversVariants")
                        .HasForeignKey("TeamCarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DriverEntry");

                    b.Navigation("TeamCar");
                });

            modelBuilder.Entity("ArxsAPI.Models.TeamChampionshipSeasonDriverRoundRace", b =>
                {
                    b.HasOne("ArxsAPI.Models.TeamChampionshipSeasonDriver", "DriverEntry")
                        .WithMany("EntryRoundRaces")
                        .HasForeignKey("DriverEntryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ArxsAPI.Models.ChampionshipSeasonRoundRace", "RoundRace")
                        .WithMany("DriversResults")
                        .HasForeignKey("RoundRaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DriverEntry");

                    b.Navigation("RoundRace");
                });

            modelBuilder.Entity("ArxsAPI.Models.TeamChampionshipSeasonDriverTrophyRound", b =>
                {
                    b.HasOne("ArxsAPI.Models.ChampionshipSeasonTrophyRound", "TrophyRound")
                        .WithMany("DriversResults")
                        .HasForeignKey("TrophyRoundId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ArxsAPI.Models.TeamChampionshipSeasonDriver", "DriverEntry")
                        .WithMany("EntryTrophyRounds")
                        .HasForeignKey("TrophyRoundId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DriverEntry");

                    b.Navigation("TrophyRound");
                });

            modelBuilder.Entity("ArxsAPI.Models.TeamChampionshipSeasonTrophy", b =>
                {
                    b.HasOne("ArxsAPI.Models.TeamChampionshipSeason", "Entry")
                        .WithMany("TrophyEntries")
                        .HasForeignKey("EntryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ArxsAPI.Models.ChampionshipSeasonTrophy", "Trophy")
                        .WithMany("TrophyEntries")
                        .HasForeignKey("TrophyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entry");

                    b.Navigation("Trophy");
                });

            modelBuilder.Entity("ArxsAPI.Models.Track", b =>
                {
                    b.HasOne("ArxsAPI.Models.Country", "Country")
                        .WithMany("Tracks")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("ArxsAPI.Models.TrackConfiguration", b =>
                {
                    b.HasOne("ArxsAPI.Models.Track", "Track")
                        .WithMany("TrackConfigurations")
                        .HasForeignKey("TrackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Track");
                });

            modelBuilder.Entity("ArxsAPI.Models.Car", b =>
                {
                    b.Navigation("TeamCars");
                });

            modelBuilder.Entity("ArxsAPI.Models.Championship", b =>
                {
                    b.Navigation("ChampionshipSeasons");

                    b.Navigation("Successor");
                });

            modelBuilder.Entity("ArxsAPI.Models.ChampionshipSeason", b =>
                {
                    b.Navigation("Entries");

                    b.Navigation("Rounds");

                    b.Navigation("Trophies");
                });

            modelBuilder.Entity("ArxsAPI.Models.ChampionshipSeasonRound", b =>
                {
                    b.Navigation("RoundRaces");

                    b.Navigation("RoundTrophies");
                });

            modelBuilder.Entity("ArxsAPI.Models.ChampionshipSeasonRoundRace", b =>
                {
                    b.Navigation("DriversResults");
                });

            modelBuilder.Entity("ArxsAPI.Models.ChampionshipSeasonTrophy", b =>
                {
                    b.Navigation("TrophyEntries");

                    b.Navigation("TrophyRounds");
                });

            modelBuilder.Entity("ArxsAPI.Models.ChampionshipSeasonTrophyRound", b =>
                {
                    b.Navigation("DriversResults");
                });

            modelBuilder.Entity("ArxsAPI.Models.Country", b =>
                {
                    b.Navigation("DriverEntries");

                    b.Navigation("Entries");

                    b.Navigation("Manufacturers");

                    b.Navigation("NationalDrivers");

                    b.Navigation("NativeDrivers");

                    b.Navigation("Teams");

                    b.Navigation("Tracks");
                });

            modelBuilder.Entity("ArxsAPI.Models.Driver", b =>
                {
                    b.Navigation("TeamsEntries");
                });

            modelBuilder.Entity("ArxsAPI.Models.Manufacturer", b =>
                {
                    b.Navigation("Cars");
                });

            modelBuilder.Entity("ArxsAPI.Models.ScoreSystem", b =>
                {
                    b.Navigation("Scores");

                    b.Navigation("Trophies");
                });

            modelBuilder.Entity("ArxsAPI.Models.Season", b =>
                {
                    b.Navigation("ChampionshipSeasons");
                });

            modelBuilder.Entity("ArxsAPI.Models.Team", b =>
                {
                    b.Navigation("Cars");

                    b.Navigation("Entries");

                    b.Navigation("NextTeam");
                });

            modelBuilder.Entity("ArxsAPI.Models.TeamCar", b =>
                {
                    b.Navigation("DriversVariants");
                });

            modelBuilder.Entity("ArxsAPI.Models.TeamChampionshipSeason", b =>
                {
                    b.Navigation("DriversEntries");

                    b.Navigation("TrophyEntries");
                });

            modelBuilder.Entity("ArxsAPI.Models.TeamChampionshipSeasonDriver", b =>
                {
                    b.Navigation("EntryCar")
                        .IsRequired();

                    b.Navigation("EntryRoundRaces");

                    b.Navigation("EntryTrophyRounds");
                });

            modelBuilder.Entity("ArxsAPI.Models.Track", b =>
                {
                    b.Navigation("TrackConfigurations");
                });

            modelBuilder.Entity("ArxsAPI.Models.TrackConfiguration", b =>
                {
                    b.Navigation("Rounds");
                });

            modelBuilder.Entity("ArxsAPI.Models.Trophy", b =>
                {
                    b.Navigation("ChampionshipSeasonTrophies");
                });
#pragma warning restore 612, 618
        }
    }
}
